
add_custom_target(examples ALL)

add_library(dummy_library_example SHARED dummy_library.cpp)

add_dependencies(examples dummy_library_example)

target_link_libraries(dummy_library_example PUBLIC xtl)

function(build_example target)
  option(BUILD_${target}_EXAMPLE "Build ${target}" TRUE)
  if(BUILD_${target}_EXAMPLE)
    add_executable("example_${target}" EXCLUDE_FROM_ALL "example_${target}.cpp")
    add_dependencies(examples "example_${target}")
    target_link_libraries("example_${target}" PUBLIC xtl)
  endif()
endfunction()

build_example(callback)
build_example(btree)
build_example(dynamic_library)
build_example(event_trace)
build_example(exception)
build_example(logging)
build_example(mapped_file)
build_example(mapped_vector)
build_example(nlp)
build_example(parse1)
build_example(parse2)
build_example(pdf)
build_example(rfc2229)
build_example(rpc)
if(XTD_BUILD_SQLITE)
  build_example(sqlite)
endif()
build_example(string)

if(BUILD_event_trace_EXAMPLE)
  if(XTD_COMPILER MATCHES "XTD_COMPILER_GCC")
    target_compile_options(example_event_trace PRIVATE -finstrument-functions)
  elseif(XTD_COMPILER MATCHES "XTD_COMPILER_MSVC")
    target_compile_options(example_event_trace PRIVATE /Gh /GH)
  endif()
endif()
